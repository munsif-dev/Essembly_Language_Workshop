     1                                  section .data
     2 00000000 48656C6C6F2C20776F-     msg db      "Hello, world!", 20   ; Define a message string (null-terminated) to be printed
     2 00000009 726C642114         
     3                                  len equ $ -msg                    ; Calculate the length of the message (using $ which gives the current address)
     4                                  
     5                                  section .bss
     6                                                                    ; Uninitialized data section (not used in this example)
     7                                  
     8                                  section .text
     9                                  
    10                                  global _start                     ; Entry point for the program
    11                                                                    ; Start is like a label, which make the starting point of the program
    12                                                                    ; We define that this is the starting point of the program
    13                                  
    14                                  
    15                                  _start:                           ; whatever we write here or after this it start executes
    16                                                                    ; sys_write call to print "Hello, world!"
    17 00000000 BA0E000000                  mov edx, len                  ; message length (edx will hold the length of the message)
    18 00000005 B9[00000000]                mov ecx, msg                  ; pointer to message to write (ecx will hold the address of the message)
    19 0000000A BB01000000                  mov ebx, 1                    ; file handle (1 represents stdout)
    20 0000000F B804000000                  mov eax, 4                    ; system call number (4 is the number for sys_write)
    21 00000014 CD80                        int 0x80                      ; invoke the system call to write the message to stdout
    22                                  
    23                                      ; sys_exit call to terminate the program
    24 00000016 BB00000000                  mov ebx, 0      ; exit code (0 indicates successful exit)
    25 0000001B B801000000                  mov eax, 1      ; system call number (1 is the number for sys_exit)
    26 00000020 CD80                        int 0x80        ; invoke the system call to exit the program
    27                                  
    28                                  ; This code outputs "Hello, world!" to the terminal and then exits successfully.
    29                                  ; You should really know what are the interrupts in Computer Architectures
